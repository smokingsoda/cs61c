--- not autograded ---

Part 1
    blocksize = 20, n = 100: 0.005, 0.006
    blocksize = 20, n = 1000: 0.552, 0.575
    blocksize = 20, n = 2000: 2.492, 2.416
    blocksize = 20, n = 5000: 99.138, 20.936
    blocksize = 20, n = 10000: 315.573, 89.649

    Checkoff Question 1: when n = 5000
    Checkoff Question 2: because the cache probably can contain these two matrices because it has enough blocks

Part 2
    blocksize = 50, n = 10000: 324.754, 74.546
    blocksize = 100, n = 10000: 383.08, 80.089
    blocksize = 500, n = 10000: 353.553, 91.818
    blocksize = 1000, n = 10000: 415.754, 82.567
    blocksize = 5000, n = 10000: 396.249, 322.239

    Checkoff Question 3: When block size is small, we can take advantage of the temporal locality of the cache. However, as the blocksize increases, first of all, the miss penalty increases as every access to the memory carries wider data. What's worse, assuming the storage of the cache is fixed, bigger block size means fewer blocks, compromising the temporal locality. 
